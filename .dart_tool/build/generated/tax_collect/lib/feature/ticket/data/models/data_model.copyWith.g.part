// **************************************************************************
// CopyWithGenerator
// **************************************************************************

abstract class _$DataModelCWProxy {
  DataModel code(String? code);

  DataModel message(String? message);

  DataModel orderNumber(String? orderNumber);

  DataModel transaction(TransactionModel? transaction);

  /// This function **does support** nullification of nullable fields. All `null` values passed to `non-nullable` fields will be ignored. You can also use `DataModel(...).copyWith.fieldName(...)` to override fields one at a time with nullification support.
  ///
  /// Usage
  /// ```dart
  /// DataModel(...).copyWith(id: 12, name: "My name")
  /// ````
  DataModel call({
    String? code,
    String? message,
    String? orderNumber,
    TransactionModel? transaction,
  });
}

/// Proxy class for `copyWith` functionality. This is a callable class and can be used as follows: `instanceOfDataModel.copyWith(...)`. Additionally contains functions for specific fields e.g. `instanceOfDataModel.copyWith.fieldName(...)`
class _$DataModelCWProxyImpl implements _$DataModelCWProxy {
  const _$DataModelCWProxyImpl(this._value);

  final DataModel _value;

  @override
  DataModel code(String? code) => this(code: code);

  @override
  DataModel message(String? message) => this(message: message);

  @override
  DataModel orderNumber(String? orderNumber) => this(orderNumber: orderNumber);

  @override
  DataModel transaction(TransactionModel? transaction) =>
      this(transaction: transaction);

  @override

  /// This function **does support** nullification of nullable fields. All `null` values passed to `non-nullable` fields will be ignored. You can also use `DataModel(...).copyWith.fieldName(...)` to override fields one at a time with nullification support.
  ///
  /// Usage
  /// ```dart
  /// DataModel(...).copyWith(id: 12, name: "My name")
  /// ````
  DataModel call({
    Object? code = const $CopyWithPlaceholder(),
    Object? message = const $CopyWithPlaceholder(),
    Object? orderNumber = const $CopyWithPlaceholder(),
    Object? transaction = const $CopyWithPlaceholder(),
  }) {
    return DataModel(
      code: code == const $CopyWithPlaceholder()
          ? _value.code
          // ignore: cast_nullable_to_non_nullable
          : code as String?,
      message: message == const $CopyWithPlaceholder()
          ? _value.message
          // ignore: cast_nullable_to_non_nullable
          : message as String?,
      orderNumber: orderNumber == const $CopyWithPlaceholder()
          ? _value.orderNumber
          // ignore: cast_nullable_to_non_nullable
          : orderNumber as String?,
      transaction: transaction == const $CopyWithPlaceholder()
          ? _value.transaction
          // ignore: cast_nullable_to_non_nullable
          : transaction as TransactionModel?,
    );
  }
}

extension $DataModelCopyWith on DataModel {
  /// Returns a callable class that can be used as follows: `instanceOfDataModel.copyWith(...)` or like so:`instanceOfDataModel.copyWith.fieldName(...)`.
  // ignore: library_private_types_in_public_api
  _$DataModelCWProxy get copyWith => _$DataModelCWProxyImpl(this);
}
