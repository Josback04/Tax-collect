// **************************************************************************
// CopyWithGenerator
// **************************************************************************

abstract class _$TransactionModelCWProxy {
  TransactionModel reference(String? reference);

  TransactionModel amount(String? amount);

  TransactionModel amountCustomer(String? amountCustomer);

  TransactionModel currency(String? currency);

  TransactionModel createdAt(String? createdAt);

  TransactionModel status(String? status);

  TransactionModel channel(String? channel);

  /// This function **does support** nullification of nullable fields. All `null` values passed to `non-nullable` fields will be ignored. You can also use `TransactionModel(...).copyWith.fieldName(...)` to override fields one at a time with nullification support.
  ///
  /// Usage
  /// ```dart
  /// TransactionModel(...).copyWith(id: 12, name: "My name")
  /// ````
  TransactionModel call({
    String? reference,
    String? amount,
    String? amountCustomer,
    String? currency,
    String? createdAt,
    String? status,
    String? channel,
  });
}

/// Proxy class for `copyWith` functionality. This is a callable class and can be used as follows: `instanceOfTransactionModel.copyWith(...)`. Additionally contains functions for specific fields e.g. `instanceOfTransactionModel.copyWith.fieldName(...)`
class _$TransactionModelCWProxyImpl implements _$TransactionModelCWProxy {
  const _$TransactionModelCWProxyImpl(this._value);

  final TransactionModel _value;

  @override
  TransactionModel reference(String? reference) => this(reference: reference);

  @override
  TransactionModel amount(String? amount) => this(amount: amount);

  @override
  TransactionModel amountCustomer(String? amountCustomer) =>
      this(amountCustomer: amountCustomer);

  @override
  TransactionModel currency(String? currency) => this(currency: currency);

  @override
  TransactionModel createdAt(String? createdAt) => this(createdAt: createdAt);

  @override
  TransactionModel status(String? status) => this(status: status);

  @override
  TransactionModel channel(String? channel) => this(channel: channel);

  @override

  /// This function **does support** nullification of nullable fields. All `null` values passed to `non-nullable` fields will be ignored. You can also use `TransactionModel(...).copyWith.fieldName(...)` to override fields one at a time with nullification support.
  ///
  /// Usage
  /// ```dart
  /// TransactionModel(...).copyWith(id: 12, name: "My name")
  /// ````
  TransactionModel call({
    Object? reference = const $CopyWithPlaceholder(),
    Object? amount = const $CopyWithPlaceholder(),
    Object? amountCustomer = const $CopyWithPlaceholder(),
    Object? currency = const $CopyWithPlaceholder(),
    Object? createdAt = const $CopyWithPlaceholder(),
    Object? status = const $CopyWithPlaceholder(),
    Object? channel = const $CopyWithPlaceholder(),
  }) {
    return TransactionModel(
      reference: reference == const $CopyWithPlaceholder()
          ? _value.reference
          // ignore: cast_nullable_to_non_nullable
          : reference as String?,
      amount: amount == const $CopyWithPlaceholder()
          ? _value.amount
          // ignore: cast_nullable_to_non_nullable
          : amount as String?,
      amountCustomer: amountCustomer == const $CopyWithPlaceholder()
          ? _value.amountCustomer
          // ignore: cast_nullable_to_non_nullable
          : amountCustomer as String?,
      currency: currency == const $CopyWithPlaceholder()
          ? _value.currency
          // ignore: cast_nullable_to_non_nullable
          : currency as String?,
      createdAt: createdAt == const $CopyWithPlaceholder()
          ? _value.createdAt
          // ignore: cast_nullable_to_non_nullable
          : createdAt as String?,
      status: status == const $CopyWithPlaceholder()
          ? _value.status
          // ignore: cast_nullable_to_non_nullable
          : status as String?,
      channel: channel == const $CopyWithPlaceholder()
          ? _value.channel
          // ignore: cast_nullable_to_non_nullable
          : channel as String?,
    );
  }
}

extension $TransactionModelCopyWith on TransactionModel {
  /// Returns a callable class that can be used as follows: `instanceOfTransactionModel.copyWith(...)` or like so:`instanceOfTransactionModel.copyWith.fieldName(...)`.
  // ignore: library_private_types_in_public_api
  _$TransactionModelCWProxy get copyWith => _$TransactionModelCWProxyImpl(this);
}
